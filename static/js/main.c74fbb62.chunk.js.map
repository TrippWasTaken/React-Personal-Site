{"version":3,"sources":["components/Music.js","components/Video.js","components/Thumbnail.js","components/VideoSlider.js","components/VidList.js","components/resources/audio/1.mp3","components/resources/audio/2.mp3","components/resources/audio/3.mp3","components/resources/audio/4.mp3","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["audioDiv","Video","props","className","url","link","controls","width","height","Thumbnail","src","alt","VideoSlider","useState","current","setCurrent","videos","map","index","onClick","VidList","vidDict","collab","paid","youtube","edits","CameraControls","install","THREE","songlist","song1","name","song2","song3","song4","Music","ref","useRef","useEffect","context","window","AudioContext","webkitAudioContext","analyser","createAnalyser","document","getElementById","createMediaElementSource","connect","destination","smoothingTimeConstant","minDecibels","maxDecibels","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","scene","camera","innerWidth","innerHeight","position","set","renderer","setSize","appendChild","domElement","lines","clock","cameraControls","add","dataC","last","z","l","material","size","line","translateZ","addLines","animate","now","getByteFrequencyData","dataAudio","i","dataA","dataB","slice","reverse","data","positions","Float32Array","length","loudness","Math","max","children","geometry","getAttribute","array","color","needsUpdate","setAttribute","y","unshift","pop","moveL","delta","getDelta","update","render","requestAnimationFrame","onSwitch","event","target","dataset","pause","load","play","id","list","Header","modal","setModal","content","setContent","toggleModal","body","classList","remove","textContent","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c74fbb62.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useRef, useEffect } from 'react'\r\nimport song1 from './resources/audio/1.mp3'\r\nimport song2 from './resources/audio/2.mp3'\r\nimport song3 from './resources/audio/3.mp3'\r\nimport song4 from './resources/audio/4.mp3'\r\nimport * as THREE from \"three\"\r\nimport CameraControls from 'camera-controls';\r\nCameraControls.install({ THREE: THREE });\r\n\r\n\r\n//audio\r\nlet audioDiv\r\nlet source\r\n\r\nconst songlist = [{ url: song1, name: \"I'll Never Leave\" },\r\n{ url: song2, name: \"I dont Understand\" },\r\n{ url: song3, name: \"Lost In A New World\" },\r\n{ url: song4, name: \"Beyond It All, Lies Nothing But Isolation\" },\r\n]\r\n\r\nconst switchSong = (url) => {\r\n    if (audioDiv.getAttribute(\"src\") !== url) {\r\n        audioDiv.pause()\r\n        audioDiv.setAttribute(\"src\", url)\r\n        audioDiv.load()\r\n        audioDiv.play()\r\n    }\r\n}\r\n\r\nconst Music = () => {\r\n    let ref = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const context = new (window.AudioContext || window.webkitAudioContext)()\r\n        const analyser = context.createAnalyser();\r\n        audioDiv = document.getElementById(\"songSource\")\r\n        source = context.createMediaElementSource(audioDiv)\r\n        source.connect(analyser)\r\n        analyser.connect(context.destination)\r\n        analyser.smoothingTimeConstant = 0.8\r\n        analyser.minDecibels = -100;\r\n        analyser.maxDecibels = -10;\r\n\r\n        analyser.fftSize = 512\r\n        const bufferLength = analyser.frequencyBinCount\r\n        const dataArray = new Uint8Array(bufferLength)\r\n\r\n        //Three\r\n        const scene = new THREE.Scene()\r\n        const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.01, 5000)\r\n        camera.position.set(-200, 200, 400)\r\n        //camera.lookAt(500,0,0)\r\n\r\n        const renderer = new THREE.WebGL1Renderer();\r\n        renderer.setSize(window.innerWidth/1.5, window.innerHeight /1.5)\r\n        ref.current.appendChild(renderer.domElement)\r\n\r\n        const lines = new THREE.Group()\r\n        const clock = new THREE.Clock();\r\n        const cameraControls = new CameraControls(camera, renderer.domElement);\r\n\r\n        const addLines = () => {\r\n            let z = 0\r\n            for (let l = 0; l < 256; l++) {\r\n                const material = new THREE.LineBasicMaterial({\r\n                    size: 1\r\n                })\r\n                const line = new THREE.Line(new THREE.BufferGeometry(), material)\r\n                line.translateZ(z)\r\n                lines.add(line)\r\n                z = z - 5\r\n            }\r\n        }\r\n        scene.add(lines);\r\n        const dataC = []\r\n\r\n        const moveL = (dataAudio, i) => {\r\n            const dataA = dataAudio\r\n            const dataB = dataAudio.slice().reverse()\r\n            const data = [...dataB, ...dataA]\r\n            const positions = new Float32Array(data.length * 3)\r\n            const loudness = Math.max(...dataAudio)\r\n            for (let i = dataC.length - 1; i > 0; i--) {\r\n                const current = lines.children[i].geometry.getAttribute('position')\r\n                const l = (dataC.length - i) / dataC.length * loudness\r\n                if (current) {\r\n                    current.array = dataC[i - 1]\r\n                    lines.children[i].material.color = new THREE.Color('hsl(' + l + ', 100%, 50%)')\r\n                    current.needsUpdate = true\r\n                } else {\r\n                    lines.children[i].geometry.setAttribute('position', new THREE.BufferAttribute(dataC[i - 1], 3))\r\n                }\r\n            }\r\n\r\n            for (let y = 0; y < data.length; y++) {\r\n                positions[3 * y + 1] = data[y] * 1 //y\r\n                positions[3 * y] = ((window.innerWidth) / (data.length) * y)   //x\r\n            }\r\n\r\n            lines.children[i].geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3))\r\n            lines.children[i].material.color = new THREE.Color('hsl(' + loudness + ', 100%, 50%)')\r\n\r\n            dataC.unshift(positions)\r\n            if (dataC.length > lines.children.length) {\r\n                dataC.pop()\r\n            }\r\n        }\r\n\r\n        let last = 0\r\n        const animate = (now) => {\r\n            if (!last || now - last >= 5) {\r\n                analyser.getByteFrequencyData(dataArray)\r\n                last = now\r\n                moveL(dataArray, 0)\r\n            }\r\n            const delta = clock.getDelta();\r\n            cameraControls.update(delta);\r\n            renderer.render(scene, camera)\r\n            requestAnimationFrame(animate)\r\n        };\r\n        \r\n        addLines()\r\n        animate()\r\n    }, [])\r\n\r\n    const onSwitch = event => {\r\n        switchSong(event.target.dataset.url)\r\n    }\r\n    return (\r\n        <section className=\"musicCont\">\r\n            <h1>This area is still WIP</h1>\r\n            <section className=\"audioVisCont\" ref={ref}>\r\n            </section>\r\n            <section className=\"songControls\">\r\n                <div className=\"audioPlayer\">\r\n                    <audio id=\"songSource\" src={song1} controls>\r\n                    </audio>\r\n                </div>\r\n                <div className=\"songList\">\r\n                    {\r\n                        songlist.map((list) => (\r\n                            <div className=\"songItem\" onClick={onSwitch} key={list.url} data-url={list.url}> {list.name}</div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Music\r\n","import ReactPlayer from 'react-player'\r\n\r\nconst Video = (props) => {\r\n  return (\r\n    <div className = \"videoCont\">\r\n      <ReactPlayer className= \"reactPlayer\"\r\n      url={\"https://youtu.be/\"+ props.link}\r\n      controls={true}\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Video","import React from 'react'\r\n\r\nconst Thumbnail = (props) => {\r\n  return (\r\n    <div className = \"videoImg\">\r\n      <img src = {\" http://i3.ytimg.com/vi/\" + props.link +\"/maxresdefault.jpg\" } alt = {props.link} ></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Thumbnail\r\n","import Video from './Video'\r\nimport { useState } from 'react'\r\nimport Thumbnail from './Thumbnail'\r\n\r\nconst VideoSlider = (props) => {\r\n\r\n  const [current, setCurrent] = useState(0)\r\n\r\n  return (\r\n    <container className=\"sliderCont\">\r\n      <section className=\"slider\">\r\n        {\r\n          props.videos.map((link, index) => (\r\n            <div className={index === current ? \"slideActive\" : \"slide\"} key={index} >\r\n              {index === current && (\r\n                <Video link={link} />\r\n              )}\r\n            </div>\r\n          ))\r\n        }\r\n      </section>\r\n      <section className = \"thumbnails\">\r\n        {\r\n          props.videos.map((link, index) => (\r\n            <div className = {index === current ? \"thumbActive\" : \"thumb\"} key = {index} onClick={()=>setCurrent(index)}>\r\n              <Thumbnail link ={link} />\r\n            </div>\r\n          ))\r\n        } \r\n      </section>\r\n    </container>\r\n  )\r\n}\r\nexport default VideoSlider\r\n","import VideoSlider from './VideoSlider'\r\n\r\n\r\nconst VidList = () => {\r\n  const vidDict = {\r\n    collab: [\"ppGy206YO4A\", \"szfDKGZlYpo\", \"jRSKA2K5Q5s\", \"wRCj_I5LAGE\"],\r\n    paid: [\"jYJS-fwJ5kA\", \"BqvH8HA2Q9w\", \"tb-Zf6o-aKY\"],\r\n    youtube: [\"CE1okamdWws\", \"4F3dow4xgv0\", \"ZL-xi8MMDdY\", \"8gyfmQel3vo\", \"md6h8hfNbFo\"],\r\n    edits: [\"o2nWi6io1Ig\",\"DbtWt9Zi048\", \"bjpld4lABrw\", \"eWZsTewx5us\"]\r\n  }\r\n\r\n  return (\r\n    <section className=\"vidCont\">\r\n      <div className=\"vidGallery\">\r\n        <div className=\"vidInfo\">\r\n          <h1>Paid Work</h1>\r\n          <p>While Im new to taking paid work I have found decent success working with local music artists, helping them get good quality videos that realize their vision.</p>\r\n        </div>\r\n        <VideoSlider videos={vidDict.paid} />\r\n      </div>\r\n\r\n\r\n      <div className=\"vidGallery\">\r\n        <div className=\"vidInfo\">\r\n          <h1>Collab Work</h1>\r\n          <p>Here is some of the collab work that Ive done with other creators</p>\r\n        </div>\r\n        <VideoSlider videos={vidDict.collab} />\r\n      </div>\r\n      \r\n      <div className=\"vidGallery\">\r\n        <div className=\"vidInfo\">\r\n          <h1>Personal Youtube</h1>\r\n          <p>Ive made a bunch of many videos on youtube over the years, heres a few such as tutorials, news shows, or just goofy fun</p>\r\n        </div>\r\n        <VideoSlider videos={vidDict.youtube} />\r\n      </div>\r\n\r\n      <div className=\"vidGallery\">\r\n        <div className=\"vidInfo\">\r\n          <h1>Edits</h1>\r\n          <p>One way of learning new techniques and effects is making small edits to some music heres some of the better ones</p>\r\n        </div>\r\n        <VideoSlider videos={vidDict.edits} />\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\nexport default VidList","export default __webpack_public_path__ + \"static/media/1.8aff7bc0.mp3\";","export default __webpack_public_path__ + \"static/media/2.2470b4c5.mp3\";","export default __webpack_public_path__ + \"static/media/3.89073e20.mp3\";","export default __webpack_public_path__ + \"static/media/4.0fcde7f5.mp3\";","import { useState } from \"react\"\r\nimport VidList from './VidList';\r\nimport Music from './Music'\r\nimport { SiInstagram, SiTwitter, SiGmail, SiYoutube } from \"react-icons/si\"\r\nconst Header = () => {\r\n\r\n  const [modal, setModal] = useState(false)\r\n  const [content, setContent] = useState(false)\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal)\r\n  }\r\n\r\n  const toggleContent = () => {\r\n    setContent(!content)\r\n    if (content) {\r\n      document.getElementById(\"toggleContentBtn\").textContent = \"Music\"\r\n    } else {\r\n      document.getElementById(\"toggleContentBtn\").textContent = \"Video\"\r\n    }\r\n  }\r\n\r\n\r\n  if (modal) {\r\n    document.body.classList.add(\"activeModal\")\r\n  } else {\r\n    document.body.classList.remove(\"activeModal\")\r\n  }\r\n\r\n  return (\r\n    <section className=\"bodySec\">\r\n      <section className=\"header\">\r\n        <div className=\"headerTitle\">\r\n          <h1>TrippMedia</h1>\r\n        </div>\r\n        <div className=\"headerNav\">\r\n          <button className=\"headerBtn\" onClick={toggleModal}>About</button>\r\n          <button className=\"headerBtn\" id=\"toggleContentBtn\" onClick={toggleContent}> Music</button>\r\n        </div>\r\n      </section>\r\n      {\r\n        modal &&\r\n        <div className=\"modal\">\r\n          <div className=\"modalContent\">\r\n            <button className=\" closeModal\" onClick={toggleModal}>\r\n              X\r\n            </button>\r\n            <span className=\"modalText\">\r\n              <h1>About me</h1>\r\n              <p>\r\n                Making youtube videos since I was 12, I have been video editing for fun half my life.\r\n                With the recent year of lockdown I decided to invest time and money into the passion I had once forgotten\r\n                and step up my abilities and pursue more professional projects.\r\n              </p>\r\n              <p>\r\n                I am proficient in most of the adobe creative suite however my main program of choice is Blackmagic Medias Davinci Resolve 17 as I find the After Effects/Premiere Pro workflow extremely sluggish.\r\n              </p>\r\n              <h1>Contact me</h1>\r\n              <p>You can easily contact me using either my email or any social media</p>\r\n              <a href=\"mailto:tripp@trippmedia.tech\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h2><SiGmail></SiGmail> Tripp@trippmedia.tech</h2>\r\n              </a>\r\n              <a href=\"https://www.instagram.com/tripp.h265/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h2><SiInstagram></SiInstagram> @Tripp.h265</h2>\r\n              </a>\r\n              <a href=\"https://twitter.com/TrippIRL\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h2><SiTwitter></SiTwitter> @TrippIRL</h2>\r\n              </a>\r\n              <a href=\"https://www.youtube.com/c/TrippEdits/featured\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <h2><SiYoutube></SiYoutube> Tripp.</h2>\r\n              </a>\r\n            </span>\r\n          </div>\r\n          <div className=\"overlay\" onClick={toggleModal}></div>\r\n        </div>\r\n      }\r\n      {\r\n        !content && <VidList />\r\n      }\r\n      {\r\n        content && <Music />\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import './App.css';\r\nimport Header from './components/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"mainCont\">\r\n      <Header />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}